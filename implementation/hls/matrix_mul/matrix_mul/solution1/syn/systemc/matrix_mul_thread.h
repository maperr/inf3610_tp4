// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2012.4
// Copyright (C) 2012 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _matrix_mul_thread_HH_
#define _matrix_mul_thread_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrix_mul_mul_32s_32s_32_6.h"

namespace ap_rtl {

struct matrix_mul_thread : public sc_module {
    // Port declarations 26
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_lv<1> > ReadEnablePort_0;
    sc_out< sc_logic > ReadEnablePort_0_ap_vld;
    sc_in< sc_lv<1> > ReadEmptyPort_0;
    sc_in< sc_lv<32> > ReadDataPort_0;
    sc_out< sc_lv<1> > WriteEnablePort_0;
    sc_out< sc_logic > WriteEnablePort_0_ap_vld;
    sc_in< sc_lv<1> > WriteFullPort_0;
    sc_out< sc_lv<32> > WriteDataPort_0;
    sc_out< sc_logic > WriteDataPort_0_ap_vld;
    sc_out< sc_lv<17> > m_result_address0;
    sc_out< sc_logic > m_result_ce0;
    sc_out< sc_logic > m_result_we0;
    sc_out< sc_lv<32> > m_result_d0;
    sc_in< sc_lv<32> > m_result_q0;
    sc_out< sc_lv<17> > m_operand1_address0;
    sc_out< sc_logic > m_operand1_ce0;
    sc_out< sc_logic > m_operand1_we0;
    sc_out< sc_lv<32> > m_operand1_d0;
    sc_in< sc_lv<32> > m_operand1_q0;
    sc_out< sc_lv<17> > m_operand2_address0;
    sc_out< sc_logic > m_operand2_ce0;
    sc_out< sc_logic > m_operand2_we0;
    sc_out< sc_lv<32> > m_operand2_d0;
    sc_in< sc_lv<32> > m_operand2_q0;


    // Module declarations
    matrix_mul_thread(sc_module_name name);
    SC_HAS_PROCESS(matrix_mul_thread);

    ~matrix_mul_thread();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrix_mul_mul_32s_32s_32_6<1,6,32,32,32>* matrix_mul_mul_32s_32s_32_6_U1;
    sc_signal< sc_lv<17> > m_operand1_addr_1_reg_557;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<17> > i_3_fu_373_p2;
    sc_signal< sc_lv<17> > i_3_reg_565;
    sc_signal< sc_lv<17> > ptData32_assign_4_rec_fu_389_p2;
    sc_signal< sc_lv<17> > ptData32_assign_4_rec_reg_573;
    sc_signal< sc_lv<1> > grp_wireread_fu_140_p2;
    sc_signal< sc_lv<17> > m_operand2_addr_1_reg_578;
    sc_signal< sc_lv<17> > i_5_fu_406_p2;
    sc_signal< sc_lv<17> > i_5_reg_586;
    sc_signal< sc_lv<17> > ptData32_assign_7_rec_fu_422_p2;
    sc_signal< sc_lv<17> > ptData32_assign_7_rec_reg_594;
    sc_signal< sc_lv<17> > next_mul1_fu_428_p2;
    sc_signal< sc_lv<17> > next_mul1_reg_599;
    sc_signal< sc_lv<9> > i_6_fu_440_p2;
    sc_signal< sc_lv<9> > i_6_reg_607;
    sc_signal< sc_lv<17> > j_cast_fu_446_p1;
    sc_signal< sc_lv<17> > j_cast_reg_612;
    sc_signal< sc_lv<9> > j_1_fu_456_p2;
    sc_signal< sc_lv<9> > j_1_reg_621;
    sc_signal< sc_lv<9> > k_1_fu_472_p2;
    sc_signal< sc_lv<9> > k_1_reg_629;
    sc_signal< sc_lv<1> > exitcond8_fu_466_p2;
    sc_signal< sc_lv<17> > next_mul_fu_489_p2;
    sc_signal< sc_lv<17> > next_mul_reg_639;
    sc_signal< sc_lv<32> > m_operand1_load_reg_649;
    sc_signal< sc_lv<32> > m_operand2_load_reg_654;
    sc_signal< sc_lv<32> > grp_fu_515_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_659;
    sc_signal< sc_lv<32> > sum_1_fu_519_p2;
    sc_signal< sc_lv<17> > m_result_addr_1_reg_669;
    sc_signal< sc_lv<17> > i_7_fu_535_p2;
    sc_signal< sc_lv<17> > i_7_reg_677;
    sc_signal< sc_lv<17> > ptData32_assign_8_rec_fu_551_p2;
    sc_signal< sc_lv<17> > ptData32_assign_8_rec_reg_685;
    sc_signal< sc_lv<1> > grp_wireread_fu_153_p2;
    sc_signal< sc_lv<17> > ptData32_assign_1_rec_reg_220;
    sc_signal< sc_lv<17> > i_reg_232;
    sc_signal< sc_lv<17> > ptData32_assign_3_rec_reg_244;
    sc_signal< sc_lv<1> > exitcond_fu_367_p2;
    sc_signal< sc_lv<17> > i_1_reg_256;
    sc_signal< sc_lv<9> > i_2_reg_268;
    sc_signal< sc_lv<1> > exitcond9_fu_450_p2;
    sc_signal< sc_lv<1> > exitcond1_fu_400_p2;
    sc_signal< sc_lv<17> > phi_mul1_reg_279;
    sc_signal< sc_lv<9> > j_reg_291;
    sc_signal< sc_lv<1> > exitcond2_fu_434_p2;
    sc_signal< sc_lv<9> > k_reg_302;
    sc_signal< sc_lv<32> > sum_reg_313;
    sc_signal< sc_lv<17> > phi_mul_reg_326;
    sc_signal< sc_lv<17> > ptData32_assign_6_rec_reg_337;
    sc_signal< sc_lv<17> > i_4_reg_349;
    sc_signal< sc_lv<32> > ptData32_assign_1_rec_cast_fu_362_p1;
    sc_signal< sc_lv<32> > ptData32_assign_3_rec_cast_fu_395_p1;
    sc_signal< sc_lv<32> > tmp_2_cast_fu_484_p1;
    sc_signal< sc_lv<32> > tmp_5_cast_fu_500_p1;
    sc_signal< sc_lv<32> > tmp_1_cast_fu_510_p1;
    sc_signal< sc_lv<32> > ptData32_assign_6_rec_cast_fu_524_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_379_p2;
    sc_signal< sc_lv<17> > ptData3_0_i_cast_fu_385_p1;
    sc_signal< sc_lv<1> > tmp_8_fu_412_p2;
    sc_signal< sc_lv<17> > ptData3_0_i1_cast_fu_418_p1;
    sc_signal< sc_lv<17> > k_cast_fu_462_p1;
    sc_signal< sc_lv<17> > tmp_2_fu_478_p2;
    sc_signal< sc_lv<17> > tmp_5_fu_495_p2;
    sc_signal< sc_lv<17> > tmp_1_fu_505_p2;
    sc_signal< sc_lv<32> > grp_fu_515_p0;
    sc_signal< sc_lv<32> > grp_fu_515_p1;
    sc_signal< sc_lv<1> > tmp_s_fu_541_p2;
    sc_signal< sc_lv<17> > ptData3_0_i2_cast_fu_547_p1;
    sc_signal< sc_logic > grp_fu_515_ce;
    sc_signal< sc_lv<1> > exitcond7_fu_529_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_st8_fsm_7;
    static const sc_lv<5> ap_ST_st9_fsm_8;
    static const sc_lv<5> ap_ST_st10_fsm_9;
    static const sc_lv<5> ap_ST_st11_fsm_10;
    static const sc_lv<5> ap_ST_st12_fsm_11;
    static const sc_lv<5> ap_ST_st13_fsm_12;
    static const sc_lv<5> ap_ST_st14_fsm_13;
    static const sc_lv<5> ap_ST_st15_fsm_14;
    static const sc_lv<5> ap_ST_st16_fsm_15;
    static const sc_lv<5> ap_ST_st17_fsm_16;
    static const sc_lv<5> ap_ST_st18_fsm_17;
    static const sc_lv<5> ap_ST_st19_fsm_18;
    static const sc_lv<5> ap_ST_st20_fsm_19;
    static const sc_lv<5> ap_ST_st21_fsm_20;
    static const sc_lv<5> ap_ST_st22_fsm_21;
    static const sc_lv<5> ap_ST_st23_fsm_22;
    static const sc_lv<5> ap_ST_st24_fsm_23;
    static const sc_lv<5> ap_ST_st25_fsm_24;
    static const sc_lv<5> ap_ST_st26_fsm_25;
    static const sc_lv<5> ap_ST_st27_fsm_26;
    static const sc_lv<5> ap_ST_st28_fsm_27;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<17> ap_const_lv17_15F90;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<17> ap_const_lv17_15F8F;
    static const sc_lv<17> ap_const_lv17_12C;
    static const sc_lv<9> ap_const_lv9_12C;
    static const sc_lv<9> ap_const_lv9_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ReadEnablePort_0();
    void thread_ReadEnablePort_0_ap_vld();
    void thread_WriteDataPort_0();
    void thread_WriteDataPort_0_ap_vld();
    void thread_WriteEnablePort_0();
    void thread_WriteEnablePort_0_ap_vld();
    void thread_ap_NS_fsm();
    void thread_exitcond1_fu_400_p2();
    void thread_exitcond2_fu_434_p2();
    void thread_exitcond7_fu_529_p2();
    void thread_exitcond8_fu_466_p2();
    void thread_exitcond9_fu_450_p2();
    void thread_exitcond_fu_367_p2();
    void thread_grp_fu_515_ce();
    void thread_grp_fu_515_p0();
    void thread_grp_fu_515_p1();
    void thread_grp_wireread_fu_140_p2();
    void thread_grp_wireread_fu_153_p2();
    void thread_i_3_fu_373_p2();
    void thread_i_5_fu_406_p2();
    void thread_i_6_fu_440_p2();
    void thread_i_7_fu_535_p2();
    void thread_j_1_fu_456_p2();
    void thread_j_cast_fu_446_p1();
    void thread_k_1_fu_472_p2();
    void thread_k_cast_fu_462_p1();
    void thread_m_operand1_address0();
    void thread_m_operand1_ce0();
    void thread_m_operand1_d0();
    void thread_m_operand1_we0();
    void thread_m_operand2_address0();
    void thread_m_operand2_ce0();
    void thread_m_operand2_d0();
    void thread_m_operand2_we0();
    void thread_m_result_address0();
    void thread_m_result_ce0();
    void thread_m_result_d0();
    void thread_m_result_we0();
    void thread_next_mul1_fu_428_p2();
    void thread_next_mul_fu_489_p2();
    void thread_ptData32_assign_1_rec_cast_fu_362_p1();
    void thread_ptData32_assign_3_rec_cast_fu_395_p1();
    void thread_ptData32_assign_4_rec_fu_389_p2();
    void thread_ptData32_assign_6_rec_cast_fu_524_p1();
    void thread_ptData32_assign_7_rec_fu_422_p2();
    void thread_ptData32_assign_8_rec_fu_551_p2();
    void thread_ptData3_0_i1_cast_fu_418_p1();
    void thread_ptData3_0_i2_cast_fu_547_p1();
    void thread_ptData3_0_i_cast_fu_385_p1();
    void thread_sum_1_fu_519_p2();
    void thread_tmp_1_cast_fu_510_p1();
    void thread_tmp_1_fu_505_p2();
    void thread_tmp_2_cast_fu_484_p1();
    void thread_tmp_2_fu_478_p2();
    void thread_tmp_3_fu_379_p2();
    void thread_tmp_5_cast_fu_500_p1();
    void thread_tmp_5_fu_495_p2();
    void thread_tmp_8_fu_412_p2();
    void thread_tmp_s_fu_541_p2();
};

}

using namespace ap_rtl;

#endif
